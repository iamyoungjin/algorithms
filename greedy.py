#탐욕법 : 현재 상황에서 직므 당장 좋은것만 고르는 방법
#단 일반적인 상황에서 그리디 알고리즘은 최적의 해를 보장할 수 없을때가 많기 때문에
#탑욕법으로 얻은 해가 최적의 해가 되는 상황에서 이를 추론할 수 있어야 함
#ex)가지고 있는 동전중 큰 단위가 항상 작은 단위의 배수이므로 작은 단위의 동전들을 종합해 다른 해가 나올 수 없다

#모험가 길드
'''
공포도가 X인 모험가는 반드시 X명 이상으로 구성한 모험가 그룹에 참여해야 여행을 떠날 수 있다
여행을 떠날 수 있는 그룹 수의 최댓값 구하기
'''
n = int(input())
data = list(map(int,input().split()))
data.sort()

result = 0 #총 그룹의 수
count = 0 #현재 그룹에 포함된 모험가의 수

for i in data: #공포도가 낮은 것부터 하나씩 확인
    count += 1 #현재 그룹에 해당 모험가 포함시키기
    if count >= i: #현재 그룹에 포험된 모험가의 수가 현재 공포도 이상이면 그룹 결성
        result+=1 #총 그룹 수 증가
        count=0 #그룹에 포함된 모험가 수 초기화

print(result)