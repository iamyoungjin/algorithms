# 특정 범위 안에 존재하는 소수 판별
#에나토스테네스의 체 알고리즘
#시간복잡도 : O(NloglogN)
#다수의 소수를 찾아야 하는 문제에 효과적이지만 각 자연수에 대한 소수 여부를 저장해야 하므로 메모리가 많이 필요
'''
에라토스테네스의 체는 N보다 작거나 같은 모든 소수를 찾을 때 사용
1. 2부터 N까지 모든 자연수 나열
2. 남은 수 중 아직 처리하지 않은 가장 작은수 i를 찾는다
3. 남은 수 중에서 i의 배수를 모두 제거(i는 제거하지 않는다)
4. 더이상 반복할 수 없을 때 까지 2번과 3번의 과정 반복
'''
import math
n= 1000 #2부터 1000까지 모든 수에 대하여 소수 판별 
#처음에는 모든 수가 소수(True) 인 것으로 초기화(0,1은 제외)
array = [True for i in range(n+1)]

#에라토스테네스의 체 알고리즘 수행 
for i in range(2,int(math.sqrt(n))+1):  #2~n의 제곱근까지 모든 수를 확인하며 i가 소수인 경우 i를 제외한 i의 모든 배수 지우기
    if array[i] == True:
        j = 2
        while i * j <= n:
            array[i*j] = False
            j+=1

#모든 소수 출력
for i in range(2,n+1):
    if array[i]:
        print(i, end='')